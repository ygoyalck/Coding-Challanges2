Node* reverse(Node *head) { Node *temp = head; if(head->next){ head = reverse(temp->next); temp->next->next = temp; temp->next = NULL; } return head; } /* First reverse the number, add 1 to it and traverse it for carry to travel till the most significant digit and then if carry exists, append to linked list and reverse again to get final result */ Node* NextLargeNumber(Node *head) { head = reverse(head); int carry =1,num; Node *ptr=head,*prev=NULL; while(ptr){ num = ((ptr->data)+carry)%10; carry = ((ptr->data)+carry)/10; ptr->data = num; prev=ptr; ptr = ptr->next; } if(carry){ Node *tail = new Node(carry); prev->next = tail; } return reverse(head); }
