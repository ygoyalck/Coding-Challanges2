int lcaInBST(BinaryTreeNode<int>* root , int val1 , int val2){
     if(root==NULL)
     return -1;
  if(root->left==NULL && root->right==NULL)
  {
    if(root->data==val1 || root->data==val2)
      return root->data;
    else{
      return -1;
        }
  }
  int x=-1;
  int y=-1;
  if(val1<root->data || val2<root->data)
  x=lcaInBST(root->left,val1,val2);
  if(val2>root->data || val1>root->data)
  y=lcaInBST(root->right,val1,val2);
  if(x==-1 && y==-1)
  {
    if(root->data==val1 || root->data==val2)
    {
      return root->data;
    }
    else{
      return -1;
    }
  }
  else if(x==-1 && y!=-1)
  {
    if(root->data==val1 || root->data==val2)
      return root->data;
    else
    {
      return y;
    }
  }
  else if(x!=-1 && y==-1)
  {
    if(root->data==val1 || root->data==val2)
      return root->data;
    else
    {
      return x;
    }
  }
  else{
    return root->data;
  }
  

}
