#include<bits/stdc++.h>
vector<int> helper(BinaryTreeNode<int> *root)
{
 if(root==NULL)
 {
   vector<int> v;
   return v;
 }
    if(root->left==NULL && root->right==NULL)
   {vector<int> v;
      v.push_back(root->data);
    return v;
   }
else{
 vector<int> l=helper(root->left);
 vector<int> r=helper(root->right);
  for(int i=0;i<l.size();i++)
  {
    r.push_back(l.at(i));
  }
  r.push_back(root->data);
  return r;
}
}
void nodesSumToS(BinaryTreeNode<int> *root, int sum) {

  vector<int> v=helper(root);
  sort(v.begin(),v.end());
  int i=0;
  int j=v.size()-1;
  while(i<j)
  {
    if(v.at(i)+v.at(j)==sum)
      {cout<<v.at(i)<<" "<<v.at(j)<<endl;
    i++;
    j--;}
    else if(v.at(i)+v.at(j)<sum)
      i++;
    else{
      j--;
    }
  }
}
