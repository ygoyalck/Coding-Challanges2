// Following is the given TreeNode structure.
/**************

template <typename T>
class TreeNode {
public:
    T data;
    vector<TreeNode<T>*> children;
    
    TreeNode(T data) {
        this->data = data;
    }
    
    ~TreeNode() {
        for (int i = 0; i < children.size(); i++) {
            delete children[i];
        }
    }
    
};
***************/

#include<queue>
void printLevelWise(TreeNode<int>* root) {
    queue<TreeNode<int>*> q;
 q.push(root);
  while(q.empty()==false)
  {
    TreeNode<int>* f=q.front();
    q.pop();
    cout<<f->data<<":";
    for(int i=0;i<f->children.size();i++)
    {
      q.push(f->children[i]);
      cout<<f->children[i]->data;
      if(i!=f->children.size()-1)
        cout<<",";
    }
    cout<<endl;
  }
    
}

