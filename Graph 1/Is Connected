#include <bits/stdc++.h>
using namespace std;
void bfs(int sv, int** edges,int V,bool* visited)
{queue<int> q;
q.push(sv);
  visited[sv]=true;
while(q.size()!=0)
{
  int f=q.front();
q.pop();
 
  for(int i=0;i<V;i++)
 {
   if(visited[i]==false && edges[f][i]==1)
   {
     q.push(i);
      visited[i]=true;
   }
     
 }
  }
  
}
int main() {
    int V, E;
    cin >> V >> E;

 int** edges=new int*[V];
  for(int i=0;i<V;i++)
  {
    edges[i]=new int[V];
    
    for(int j=0;j<V;j++)
    {
      edges[i][j]=0;
    }
  }
  int sv,ev;
for(int i=0;i<E;i++)
{
  cin>>sv>>ev;
  edges[sv][ev]=1;
  edges[ev][sv]=1;
}
  bool* visited=new bool[V];
  for(int i=0;i<V;i++)
    visited[i]=false;
  
  bfs(0,edges,V,visited);
  int y=0;
  for(int i=0;i<V;i++)
  {
    if(visited[i]==false)
      {y=1;
      break;}
  }
  if(y==1)
    cout<<"false";
  else
    cout<<"true";
  
  delete [] visited;
  for(int i=0;i<V;i++)
  {
    delete [] edges[i];
  }
  delete [] edges;
  return 0;
}
